{"version":3,"sources":["components/Row.js","components/Results.js","data/lines.js","data/johnPicks.js","components/Table.js","components/Legend.js","components/App.js","index.js"],"names":["Row","team","line","johnPick","justinPick","logo","wins","gamesPlayed","projectedWins","Math","round","applyHighlighting","pick","projWin","backgroundColor","projLoss","lockWin","lockLoss","style","textAlign","scope","src","width","height","alt","id","Results","result","LINES","JOHNPICKS","Table","state","teams","loaded","findWinner","justinProjWins","johnProjWins","forEach","projWins","fetch","then","response","json","teamData","sports","leagues","map","i","push","abbreviation","record","items","stats","value","logos","href","setState","catch","error","alert","this","className","overflowY","key","Component","Legend","margin","verticalAlign","App","padding","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e9319db.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Row = ( { team, line, johnPick, justinPick } ) => {\n    const { logo, wins, gamesPlayed } = team;\n    const projectedWins = Math.round( 16 * ( wins / gamesPlayed ) );\n\n    const applyHighlighting = ( pick ) => {\n        const projWin = { backgroundColor: 'rgba(0, 255, 0, 0.1)' };\n        const projLoss = { backgroundColor: 'rgba(255, 0, 0, 0.1)' };\n        const lockWin = { backgroundColor: 'rgba(0, 255, 0, 0.4)' };\n        const lockLoss = { backgroundColor: 'rgba(255, 0, 0, 0.4)' };\n        if( wins > line ) { return pick === 'OVER' ? lockWin : lockLoss }\n        if( wins + ( 16 - gamesPlayed ) < line ) { return pick ==='UNDER' ? lockWin : lockLoss }\n        if( projectedWins > line ) { return pick === 'OVER' ? projWin : projLoss }\n        if (projectedWins < line ) { return pick === 'UNDER' ? projWin : projLoss }\n    }\n\n    return(\n        <tr style={{textAlign: 'center'}}>\n            <th scope=\"row\"><img src={ logo } style={ { width: '30px', height: '30px' } } alt={team.team}/></th>\n            <td>{team.team }</td>\n            <td>{ line }</td>\n            <td>{ wins }</td>\n            <td>{ projectedWins }</td>\n            <td id=\"john\" style={ applyHighlighting( johnPick ) }>{ johnPick }</td>\n            <td id=\"justin\" style={ applyHighlighting( justinPick ) }>{ justinPick }</td>\n        </tr>\n    )\n}\n\nRow.propTypes = {\n    team: PropTypes.object.isRequired,\n    line: PropTypes.number.isRequired,\n    johnPick: PropTypes.string.isRequired,\n    justinPick: PropTypes.string.isRequired\n}\n\nexport default Row;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Results = ( { result }) => {\n    return(<h5><strong>{result}</strong></h5>)\n}\n\nResults.propTypes = {\n    result: PropTypes.string.isRequired\n}\n\nexport default Results;","const LINES = {\n    'BUF': 7,\n    'MIA': 4.5,\n    'NE': 11,\n    'NYJ': 7.5,\n    'DEN': 7,\n    'KC': 10.5,\n    'LAC': 9.5,\n    'OAK': 6,\n    'BAL': 8.5,\n    'CIN': 6,\n    'CLE': 9,\n    'PIT': 9,\n    'HOU': 8.5,\n    'IND': 7.5,\n    'JAX': 8,\n    'TEN': 8,\n    'DAL': 9,\n    'NYG': 6,\n    'PHI': 10,\n    'WSH': 6,\n    'ARI': 5,\n    'LAR': 10.5,\n    'SF': 8,\n    'SEA': 8.5,\n    'CHI': 9,\n    'DET': 6.5,\n    'GB': 9,\n    'MIN': 9,\n    'ATL': 8.5,\n    'CAR': 7.5,\n    'NO': 10.5,\n    'TB': 6.5\n};\n\nexport default LINES;\n","const JOHNPICKS = {\n    'BUF': 'OVER',\n    'MIA': 'UNDER',\n    'NE': 'UNDER',\n    'NYJ': 'OVER',\n    'DEN': 'OVER',\n    'KC': 'OVER',\n    'LAC': 'OVER',\n    'OAK': 'OVER',\n    'BAL': 'UNDER',\n    'CIN': 'UNDER',\n    'CLE': 'OVER',\n    'PIT': 'UNDER',\n    'HOU': 'OVER',\n    'IND': 'OVER',\n    'JAX': 'OVER',\n    'TEN': 'OVER',\n    'DAL': 'UNDER',\n    'NYG': 'UNDER',\n    'PHI': 'OVER',\n    'WSH': 'OVER',\n    'ARI': 'UNDER',\n    'LAR': 'UNDER',\n    'SF': 'OVER',\n    'SEA': 'UNDER',\n    'CHI': 'OVER',\n    'DET': 'UNDER',\n    'GB': 'UNDER',\n    'MIN': 'UNDER',\n    'ATL': 'UNDER',\n    'CAR': 'UNDER',\n    'NO': 'OVER',\n    'TB': 'OVER'\n};\n\nexport default JOHNPICKS;\n","import React, { Component } from 'react';\nimport Row from './Row';\nimport Results from './Results';\nimport LINES from '../data/lines';\nimport JOHNPICKS from '../data/johnPicks';\n\nclass Table extends Component {\n\n    state = {\n        teams: [],\n        loaded: false\n    };\n\n    componentDidMount() {\n        fetch('https://site.api.espn.com/apis/site/v2/sports/football/nfl/teams?limit=32')\n        .then( response => response.json() )\n        .then( json => {\n            const teamData = json.sports[0].leagues[0].teams;\n            let teams = [];\n            teamData.map( ( team, i ) => {\n                return(\n                    teams.push( {\n                    id: i,\n                    team: team.team.abbreviation,\n                    wins: team.team.record.items[0].stats[1].value,\n                    gamesPlayed: team.team.record.items[0].stats[8].value,\n                    logo: team.team.logos[0].href\n                } )\n                );\n            } );\n            this.setState( { teams, loaded: true } );\n        } )\n        .catch( error => {\n            alert( 'Error: ', error )\n        });\n    }\n\n    findWinner = () => {\n        const { teams } = this.state;\n        let justinProjWins = 0;\n        let johnProjWins = 0;\n        teams.forEach( team => {\n            let projWins = Math.round(16 * ( team.wins / team.gamesPlayed ));\n            let line = LINES[team.team];\n            if ( (projWins > line && JOHNPICKS[team.team] === 'OVER') || (projWins < line && JOHNPICKS[team.team] === 'UNDER') ) {\n                johnProjWins++\n            } else if ((projWins < line && JOHNPICKS[team.team] === 'OVER') || (projWins > line && JOHNPICKS[team.team] === 'UNDER')){\n                justinProjWins++\n            }\n        })\n        return justinProjWins === johnProjWins ? `It's a draw` : (justinProjWins >= johnProjWins ? `John owes Justin $${5*(justinProjWins - johnProjWins)}` : `Justin owes John $${5*(johnProjWins - justinProjWins)}`);\n    }\n\n    render() {\n        const { teams, loaded } = this.state;\n        if( loaded ){\n            return(\n                <div className=\"container\">\n                    <Results result={this.findWinner()}/>\n                    <table className=\"table fixed_header\">\n                        <thead style={{textAlign: 'center'}}>\n                            <tr>\n                                <th scope=\"col\">Logo</th>\n                                <th scope=\"col\">Team</th>\n                                <th scope=\"col\">Line</th>\n                                <th scope=\"col\">Wins</th>\n                                <th scope=\"col\">Projected</th>\n                                <th scope=\"col\">John</th>\n                                <th scope=\"col\">Justin</th>\n                            </tr>\n                        </thead>\n                        <tbody style={{overflowY: 'auto'}}>\n                            { teams.map( team => \n                                <Row \n                                    key={ team.id } \n                                    team={ team } \n                                    line={ LINES[team.team] }\n                                    johnPick={ JOHNPICKS[team.team] }\n                                    justinPick={ JOHNPICKS[team.team] === 'OVER' ? 'UNDER' : 'OVER' }\n                                />\n                                )\n                            }\n                        </tbody>\n                    </table> \n                </div>\n            )\n        } else {\n            return(\n                <div>Loading...</div>\n            )\n        }\n    }\n}\n\nexport default Table;","import React from 'react';\n\nconst Legend = () => {\n    return(\n        <div className=\"container\">\n            <h5><strong>Legend:</strong></h5>\n            <div className=\"row\" style={{margin: '2px 150px 20px 150px'}}>\n                <div className=\"col-sm projWin\"><span style={{verticalAlign: 'middle'}}>Projected Win</span></div>\n                <div className=\"col-sm projLoss\"><span style={{verticalAlign: 'middle'}}>Projected Loss</span></div>\n                <div className=\"col-sm win\"><span style={{verticalAlign: 'middle'}}>Win</span></div>\n                <div className=\"col-sm loss\"><div>Loss</div></div>\n            </div>\n        </div>\n    );\n}\n\nexport default Legend;","import React, { Component } from 'react';\nimport Table from './Table';\nimport Legend from './Legend';\n\nclass App extends Component {\n    render() {\n        return(\n            <div>\n                <h1 style={ { \n                    padding: '15px',\n                    textAlign: 'center' \n                } }>John and Justin's NFL Over/Unders</h1>\n                <Legend />\n                <Table />\n            </div>\n            \n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}